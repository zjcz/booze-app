// Mocks generated by Mockito 5.4.6 from annotations
// in booze_app/test/beer_form_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i9;

import 'package:booze_app/data/beer.dart' as _i8;
import 'package:booze_app/data/firebase_service.dart' as _i5;
import 'package:booze_app/data/sort_option.dart' as _i7;
import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_storage/firebase_storage.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseAuth_0 extends _i1.SmartFake implements _i2.FirebaseAuth {
  _FakeFirebaseAuth_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i3.FirebaseFirestore {
  _FakeFirebaseFirestore_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseStorage_2 extends _i1.SmartFake
    implements _i4.FirebaseStorage {
  _FakeFirebaseStorage_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuery_3<T extends Object?> extends _i1.SmartFake
    implements _i3.Query<T> {
  _FakeQuery_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_4 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FirebaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseService extends _i1.Mock implements _i5.FirebaseService {
  MockFirebaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseAuth get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeFirebaseAuth_0(this, Invocation.getter(#auth)),
          )
          as _i2.FirebaseAuth);

  @override
  _i3.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_1(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i3.FirebaseFirestore);

  @override
  _i4.FirebaseStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFirebaseStorage_2(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i4.FirebaseStorage);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i3.Query<Map<String, dynamic>> buildSearchQuery(
    _i7.SortOption? sortOption,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#buildSearchQuery, [sortOption]),
            returnValue: _FakeQuery_3<Map<String, dynamic>>(
              this,
              Invocation.method(#buildSearchQuery, [sortOption]),
            ),
          )
          as _i3.Query<Map<String, dynamic>>);

  @override
  _i6.Future<_i2.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<_i2.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.UserCredential>.value(
              _FakeUserCredential_4(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.UserCredential>);

  @override
  _i6.Future<void> createBeer(_i8.Beer? beer) =>
      (super.noSuchMethod(
            Invocation.method(#createBeer, [beer]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateBeer(_i8.Beer? beer) =>
      (super.noSuchMethod(
            Invocation.method(#updateBeer, [beer]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteBeer(_i8.Beer? beer) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBeer, [beer]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteBeerImage(String? imageUrl) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBeerImage, [imageUrl]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String> uploadImage(_i9.File? image) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [image]),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [image]),
              ),
            ),
          )
          as _i6.Future<String>);
}
